---
- hosts: web
  gather_facts: false
  tasks:
    ## 机器创建需要一段时间，所以先尝试连接, 确保连接可用再执行后续操作
    - name: Wait connection
      ## 每秒尝试进行一次连接直到连接成功或者超时
      wait_for_connection: 
        sleep: 1
        timeout: "{{ wait_connection_timeout }}"

    - name: Ensure nginx is at the latest version
      package:
        name: nginx
        state: latest
      become: yes
      retries: 3
      delay: 5
      register: ensure_nginx
      until: ensure_nginx is success
    
    - name: Create /var/www/html
      file:
        path: /var/www/html
        state: directory
      become: yes

    - name: Copy index.html
      copy:
        ## 使用相对路径访问本目录下的文件
        src: index.html
        dest: /var/www/html/index.html
        mode: '0644'

    - name: Start nginx
      service:
        name: nginx
        state: started
      become: yes
- hosts: web
  remote_user: root
  name: MySQL
  gather_facts: false
  vars:
    wait_connection_timeout: "120"
    mysql_user_name: "user"
    mysql_user_password: "user"
    mysql_user_db_access: "ALL PRIVILEGES"
    mysql_db_name: "test"
    mysql_table_name: "test"
  tasks:
    - name: Wait connection
      wait_for_connection: 
        sleep: 1
        timeout: "{{ wait_connection_timeout }}"
    # - name: Ensure mysql is at the latest version
    #   package:
    #     name: mysql-server
    #     state: latest
    #   become: yes
    #   retries: 3
    #   delay: 5
    #   register: ensure_mysql
    #   until: ensure_mysql is success
    - name : Install mysql
      yum:
        name: mysql-server
        state: present
      become: yes
      # when: ensure_mysql.stdout.find('No package mysql-server available') == -1
    - name: Start mysql
      service:
        name: mysql
        state: started
      become: yes
    - name: Create user
      mysql_user:
        name: "{{ mysql_user_name }}"
        password: "{{ mysql_user_password }}"
        state: present
      become: yes
      retries: 3
      delay: 5
      register: create_user
      until: create_user is success
    - name: Grant user privileges
      mysql_user:
        name: "{{ mysql_user_name }}"
        password: "{{ mysql_user_password }}"
        db_access: "{{ mysql_user_db_access }}"
        state: present
      become: yes
      retries: 3
      delay: 5
      register: grant_user
      until: grant_user is success
    - name: Create database
      mysql_db:
        name: "{{ mysql_db_name }}"
        state: present
      become: yes
      retries: 3
      delay: 5
      register: create_db
      until: create_db is success
    - name: Create table
      mysql_db:
        name: "{{ mysql_db_name }}"
        sql: "CREATE TABLE {{ mysql_db_name }}.{{ mysql_table_name }} (id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255), PRIMARY KEY (id))"
        state: present
      become: yes
      retries: 3
      delay: 5
      register: create_table
      until: create_table is success

# - hosts: web
#   name: PHP
#   gather_facts: false
#   tasks:
#     - name: Wait connection
#       ## 每秒尝试进行一次连接直到连接成功或者超时
#       wait_for_connection: 
#         sleep: 1
#         timeout: "{{ wait_connection_timeout }}"
#     - name: Ensure php is at the latest version
#       package:
#         name: php
#         state: latest
#       become: yes
#       retries: 3
#       delay: 5
#       register: ensure_php
#       until: ensure_php is success
#     - name: Ensure php-fpm is at the latest version
#       package:
#         name: php-fpm
#         state: latest
#       become: yes
#       retries: 3
#       delay: 5
#       register: ensure_php-fpm
#       until: ensure_php-fpm is success
#     - name: Start php-fpm
#       service:
#         name: php-fpm
#         state: started
#       become: yes
#     - name: Create php-fpm pool
#       php_fpm_pool:
#         name: {{ php_fpm_pool_name }}
#         user: {{ php_fpm_pool_user }}
#         group: {{ php_fpm_pool_group }}
#         listen: {{ php_fpm_pool_listen }}
#         pm: {{ php_fpm_pool_pm }}
#         pm_max_children: {{ php_fpm_pool_pm_max_children }}
#         pm_start_servers: {{ php_fpm_pool_pm_start_servers }}
#         pm_min_spare_servers: {{ php_fpm_pool_pm_min_spare_servers }}
#         pm_max_spare_servers: {{ php_fpm_pool_pm_max_spare_servers }}
#         pm_process_idle_timeout: {{ php_fpm_pool_pm_process_idle_timeout }}
#         state: present
#       become: yes
#       retries: 3
#       delay: 5
#       register: create_php-fpm_pool
#       until: create_php-fpm_pool is success
#     - name: 